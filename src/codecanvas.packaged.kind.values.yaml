fullnameOverride: spaceport

application:
  image:
    registry: ghcr.io
    repository: sedovalx/codecanvas-qa-task/codecanvas-app
    tag: 2024.3-dev.895
  ingress:
    hostname: jetbrains.local
    computeHostname: computeservice.jetbrains.local

  secret:
    redis:
      existingSecretName: "spaceport-redis-secret"
    objectStorage:
      type: "aws"
      existingSecretName: "spaceport-minio-secret"
    auditObjectStorage:
      type: "aws"
      existingSecretName: "spaceport-minio-secret-audit"
    postgresql:
      existingSecretName: "spaceport-db-secret"
    codecanvas:
      masterSecret: "set in kind values"
      localAdministrator:
        email: "rdo-support@jetbrains.com"
        password: "admin"
      jump:
        jwtPrivateKey: "set in kind values"
        jumpHostPrivateKey: "set in kind values"
      relay:
        jwtPrivateKey: "set in kind values"
  config:
    logging:
      format: plaintext
    codecanvas:
      preload:
        exampleProject: true
      licenseAgreementAccepted: true
      url: http://spaceport-app.kube-space:9084
      apiBaseUrl: http://spaceport-app.kube-space:8084
      computeService:
        url: http://spaceport-app.kube-space:9098
      rd:
        auth:
          strongPassword: false
        sidecarImage:
          registry: ghcr.io
          repository: sedovalx/codecanvas-qa-task/codecanvas-sidecar
      execution:
        timeouts:
          deletionDelay: 0m
        k8s:
          operator:
            preloadConfiguration:
              name: "K8s Default (Preloaded)"
              instanceId: "preloaded-operator"
              namespace: "spaceport-rde"
              jwtPublicKey: "set in script"
              instanceType:
                  name: Regular
                  cpuCores: 4
                  memoryMiB: 4096
                  volumeMiB: 10240
          worker:
            image:
              registry: ghcr.io
              repository: sedovalx/codecanvas-qa-task/codecanvas-worker-k8s
            storageClassName: "kind-csi-hostpath-storage-class"
            volumeSnapshotClassName: "csi-hostpath-snapclass"
      frontend:
        url: http://jetbrains.local:80
        enableWebdriverTestIds: true
      relay:
        url: ws://gateway-relay.jetbrains.local:80
        internalUrl: ws://relay.kube-space:8099 # see relay.fullnameOverride
      hotPool:
        enabled: true
      jump:
        enabled: true
        instanceId: "0017962d-e17f-4ea8-b38c-9cd39bc2f0c0"
        sshHost: jump-ssh.kube-space
        sshExternalHost: jump.jetbrains.local
        #sshPort: 63101
        #sshExternalPort: 63101
      localFeeds:
        type: kind
      testUser:
        username: test.user

jump:
  fullnameOverride: jump
  application:
    secret:
      jump:
        JUMP_INSTANCE_ID: "0017962d-e17f-4ea8-b38c-9cd39bc2f0c0"
        JUMP_JWT_PRIVATE_KEY: "set in kind values"
        JUMP_CANVAS_URL: "http://spaceport-app.kube-space:8084"
        JUMP_SSH_HOST_KEY: "set in kind values"
    image:
      registry: ghcr.io
      repository: sedovalx/codecanvas-qa-task/codecanvas-jump

relay:
  fullnameOverride: relay
  application:
    ingress:
      hostname: gateway-relay.jetbrains.local
    secret:
      relayJwtPublicKey: "set in kind values"

redis:
  fullnameOverride: redis
  ## temporal changes: after testing, change behaviour in base values.yaml (disable persistence) and remove all code below
  persistence:
    enabled: false
  global:
    storageClass: "kind-csi-hostpath-storage-class"

operator:
  enabled: true
  operator:
    secret:
      operatorServerUrl: "http://spaceport-app.kube-space:8098"
      jwtPrivateKey: "set in script"
      instanceId: "preloaded-operator"
    ## @param operator.targetNamespace namespace where RDE will be launched
    targetNamespace: "spaceport-rde"
  image:
    registry: ghcr.io
    repository: sedovalx/codecanvas-qa-task/codecanvas-operator
